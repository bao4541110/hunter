set nocompatible
filetype off "required!
"使用vundle管理插件
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
"使用vundle来管理vundle，这个必须有
Bundle 'gmarik/vundle' 
"接下来是要安装的插件
"格式1：github上的其他用户的仓库（非vim-script帐户里的仓库）要加用户名
Bundle 'tpope/vim-fugitive'
"格式2：vim-script的仓库里的插件，直接打仓库名即可。"
Bundle 'L9'
Bundle 'FuzzyFinder'
Bundle 'PinyinSearch'
let g:PinyinSearch_Dict='/home/hunter/.vim/bundle/PinyinSearch/PinyinSearch.dict'
Bundle 'Lokaltog/vim-powerline'
" vim-powerline
set laststatus=2
set t_Co=256
let g:Powerline_symbols = 'unicode'
set encoding=utf8

"Bundle 'The-NERD-tree'
Bundle 'scrooloose/nerdtree'
Bundle 'winmanager'
Bundle 'taglist.vim'
Bundle 'minibufexpl.vim'
Bundle 'bufexplorer.zip'
Bundle 'OmniCppComplete'
Bundle 'ZenCoding.vim'
Bundle 'SyntaxComplete'
if has("autocmd") && exists("+omnifunc")
		autocmd Filetype *
				    \	if &omnifunc == "" |
				    \		setlocal omnifunc=syntaxcomplete#Complete |
				    \	endif
endif
"格式3：非github上的git仓库"
Bundle 'git://vim-latex.git.sourceforge.net/gitroot/vim-latex/vim-latex'

"在所有的Bundle命令后加上文件类型检测"
filetype plugin indent on
syntax enable
"重设配色方案"
colorscheme desert
"设置path，gf find的路径“
set path =.,~/workspace/**,,
set fencs=utf-8,cp936,gbk
"set spell
set encoding=utf8
set ffs=unix,dos,mac
set nu
set mouse=a "always use mouse
set lbr
set tw=500
set ai "Autoindent
set si "Smart indent
set wrap "wrap lines
set autoread
set wildmenu   
"增强 模式中的命令自动完成操作"
set cin    
"设置C程序的缩进"
set sw=4	
"设置缩进使用4个空格"
set autoindent
set smartindent 
set tabstop=4
set sta
filetype on  
"检测文件的类型"
set history=1000
set background=dark
set showmatch
set ruler	
"在编辑过程中，在右下角显示光标位置的状态行"
set incsearch
"hi Comment ctermfg=DarkCyan
set magic
set showmatch
set lazyredraw
set hlsearch
let mapleader=","
"下面的是输入，ee 后查看vimrc文件"
map <silent> <leader>ee :e ~/.vimrc<cr>
let Tlist_Ctags_Cmd='/bin/ctags'  
let Tlist_Show_One_File=1  
let Tlist_Ctags_Cmd="/usr/bin/ctags"
if &diff
	let Tlist_Auto_Open=0
else
	let Tlist_Auto_Open=1
endif
let Tlist_Use_Right_Window=1
let Tlist_Exit_OnlyWindow=1  
nmap <F6> :Tlist<CR>
"配置autoinfo的信息，插入作者相应的信息"
let g:vimrc_author='Hunter' 
let g:vimrc_email='tangbao1113@gmail.com' 
let g:vimrc_homepage='http://weibo.com/tonytab' 
nmap <F4> :AuthorInfoDetect<cr>

"配置NERD Tree 文件浏览器"
let NERDTreeWinPos = "right" "where NERD tree window is placed on the screen
let NERDTreeWinSize = 30 "size of the NERD tree
nmap <F7> <ESC>:NERDTreeToggle<RETURN>

"set laststatus=2
"highlight StatusLine cterm=bold ctermfg=yellow ctermbg=blue
" 获取当前路径，将$HOME转化为~
 function! CurDir()
     let curdir = substitute(getcwd(), $HOME, "~", "g")
         return curdir
endfunction
"set statusline=[%n]\ %f%m%r%h\ \|\ \ pwd:\ %{CurDir()}\ \ \|\ %l,%c\ %p%%\ \
"
"
"MiniBufExplorer 配置文件"
let g:miniBufExplMapWindowNavVim=1
let g:miniBufExplMapWindowNavArrows=1
let g:miniBufExplMapCTabSwitchBufs=1
let g:miniBufExplModSelTarget=1


"代码自动补全功能"
set nocp
filetype plugin on
set ofu=syntaxcomplete
let g:pydiction_location='/usr/share/vim/vim73/pydiction/complete-dict'
let g:pydiction_menu_hight=20
autocmd FileType python set omnifunc=pythoncomplete#Complete
"设置python 运行的快捷方式"
nmap <F5> :! python %<cr>
"html/xhtml editing in vim (写完>后自动不全结束标签)
function! InsertHtmlTag()
    let pat = '\c<\w\+\s*\(\s\+\w\+\s*=\s*[''#$;,()."a-z0-9]\+\)*\s*>'
    normal! a>
    let save_cursor = getpos('.')
    let result = matchstr(getline(save_cursor[1]), pat)
    "if (search(pat, 'b', save_cursor[1]) && searchpair('<','','>', 'bn',0,getline('.')) > 0)
    if (search(pat, 'b', save_cursor[1]))
        normal! lyiwf>
        normal! a</
        normal! p
        normal! a>
     endif
    :call cursor(save_cursor[1], save_cursor[2], save_cursor[3])
endfunction


" =========
" AutoCmd
" =========
if has("autocmd")
    filetype plugin indent on
endif    
" 括号自动补全
func! AutoClose()
    :inoremap ( ()<ESC>i
    :inoremap " ""<ESC>i
    :inoremap ' ''<ESC>i
    :inoremap { {}<ESC>i
    :inoremap [ []<ESC>i
    :inoremap ) <c-r>=ClosePair(')')<CR>
    :inoremap } <c-r>=ClosePair('}')<CR>
    :inoremap ] <c-r>=ClosePair(']')<CR>
endf

function! ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
        return "\<Right>"
    else
        return a:char
    endif
endf

autocmd BufNewFile *.py 0r ~/.vim/template/pythonconfig.py
autocmd BufNewFile *.html 0r ~/.vim/template/htmlconfig.html
" 在光标下插入新行
imap <M-o> <Esc>o

"修改 vmirc 后自动生效
map <leader>s :source ~/.vimrc<cr>
autocmd! bufwritepost .vimrc source ~/.vimrc
